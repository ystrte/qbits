{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "aksName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "osDiskSizeGB": {
            "defaultValue": 100,
            "minValue": 0,
            "maxValue": 1023,
            "type": "int",
            "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            }
        },
        "agentCount": {
            "defaultValue": 3,
            "minValue": 1,
            "maxValue": 50,
            "type": "int",
            "metadata": {
                "description": "The number of agent nodes for the cluster. Production workloads have a recommended minimum of 3."
            }
        },
        "agentVMSize": {
            "defaultValue": "Standard_B1s",
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "existingServicePrincipalClientId": {
            "type": "string",
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            }
        },
        "existingServicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The Service Principal Client Secret."
            }
        },
        "osType": {
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux",
                "Windows"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "kubernetesVersion": {
            "defaultValue": "1.14.8",
            "type": "string",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "enableHttpApplicationRouting": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "boolean flag to turn on and off of http application routing. This add-on is not recommended for production use."
            }
        },
        "enableOmsAgent": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "boolean flag to turn on and off of OMS Agent"
            }
        },
        "logAnalyticsID": {
            "type": "string",
            "metadata": {
                "description": "The Log Analytics ID"
            }
        },
        "networkPlugin": {
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "defaultValue": "azure",
            "type": "string",
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "maxPods": {
            "defaultValue": 50,
            "type": "int",
            "metadata": {
                "description": "Maximum number of pods that can run on a node."
            }
        },
        "enableRBAC": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "boolean flag to turn on and off of RBAC"
            }
        },
        "existingVirtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of an existing VNET that will contain this AKS deployment."
            }
        },
        "existingVirtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing VNET resource group"
            }
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Subnet name that will contain the App Service Environment"
            }
        },
        "serviceCidr": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "defaultValue": "10.0.0.10",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "defaultValue": "172.17.0.1/16",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        },
        "aadClientAppID": {
            "type": "string",
            "metadata": {
                "description": "Application Id used for AAD."
            }
        },
        "aadServerAppID": {
            "type": "string",
            "metadata": {
                "description": "Application ID for the server application."
            }
        },
        "aadServerAppSecret": {
            "type": "string",
            "metadata": {
                "description": "Secret for the server application ID."
            }
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "633b4369-77b3-495b-a4b4-eca8484ef39f",
            "metadata": {
                "description": "Tenant ID used for the AAD Profile."
            }
        },
        "tagSystem": {
            "type": "string",
            "metadata": {
                "description": "Tags for the system"
            }
        },
        "tagEnvironment": {
            "type": "string",
            "metadata": {
                "description": "Tags the environment"
            }
        },
        "tagTeam": {
            "type": "string",
            "defaultValue": "Basefarm",
            "metadata": {
                "description": "Tags for the team managing this resource"
            }
        }
    },
    "variables": {
        "vnetSubnetId": "[resourceId(parameters('existingVirtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks/subnets',parameters('existingVirtualNetworkName'),parameters('existingSubnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "name": "[parameters('aksName')]",
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "System": "[parameters('tagSystem')]",
                "Environment": "[parameters('tagEnvironment')]",
                "Team": "[parameters('tagTeam')]",
                "Service": "k8s"
            },
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "enablePodSecurityPolicy": false,
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    },
                    "omsagent": {
                        "enabled": "[parameters('enableOmsAgent')]",
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[parameters('logAnalyticsID')]"
                        }
                    }
                },
                "agentPoolProfiles": [
                    {
                        "name": "nodepool1",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "vnetSubnetID": "[variables('vnetSubnetID')]",
                        "maxPods": "[parameters('maxPods')]"
                    }
                ],
                "servicePrincipalProfile": {
                    "clientId": "[parameters('existingServicePrincipalClientId')]",
                    "secret": "[parameters('existingServicePrincipalClientSecret')]"
                },
                "networkProfile": {
                    "networkPlugin": "[parameters('networkPlugin')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
                    "networkPolicy": "azure"
                },
                "aadProfile": {
                    "clientAppID": "[parameters('aadClientAppID')]",
                    "serverAppID": "[parameters('aadServerAppID')]",
                    "serverAppSecret": "[parameters('aadServerAppSecret')]",
                    "tenantID": "[parameters('tenantId')]"
                }
            }
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('aksName'))).fqdn]"
        }
    }
}